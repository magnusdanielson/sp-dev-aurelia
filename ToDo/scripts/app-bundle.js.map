{"version":3,"sources":["src/todo.ts","src/app.ts","src/environment.ts","src/main.ts","src/my-feature/index.ts","src/resources/index.ts","c:/GitProjects/sp-dev-aurelia/ToDo/src/app.html"],"names":[],"mappings":";;IAAA;QAII,cAAY,WAAW;YAEnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACtB,CAAC;QACL,WAAC;IAAD,CATA,AASC,IAAA;IATY,YAAI,OAShB,CAAA;;;;;ICPD;QAME;YAFA,YAAO,GAAG,cAAc,CAAC;YAIvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC5B,CAAC;QAED,qBAAO,GAAP;YAEE,EAAE,CAAA,CAAC,IAAI,CAAC,eAAe,CAAC,CACxB,CAAC;gBACC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,WAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC5B,CAAC;QACH,CAAC;QAED,wBAAU,GAAV,UAAW,IAAI;YAEb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,EAAE,CAAA,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAChB,CAAC;gBACC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QACH,UAAC;IAAD,CA9BA,AA8BC,IAAA;IA9BY,WAAG,MA8Bf,CAAA;;;;;IChCD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aAER,sBAAsB,EAAE;aACxB,gBAAgB,EAAE;aAClB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,CAAC;IACpE,CAAC;IAhBe,iBAAS,YAgBxB,CAAA;;;;;ICzBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;ICFD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD","file":"app-bundle.js","sourcesContent":["export class Todo\r\n{\r\n    description: string;\r\n    done: boolean;\r\n    constructor(description)\r\n    {\r\n        this.description = description;\r\n        this.done = false;\r\n    }\r\n}","import {Todo} from './todo';\n\nexport class App {\n  heading: string;\n  todos: Array<Todo>;\n  todoDescription: string;\n  message = 'Hello World!';\n\n  constructor()\n  {\n    this.heading = 'Todos';\n    this.todos = [];\n    this.todoDescription = '';\n  }\n\n  addTodo()\n  {\n    if(this.todoDescription)\n    {\n      this.todos.push( new Todo(this.todoDescription));\n      this.todoDescription = '';\n    }\n  }\n\n  removeTodo(todo)\n  {\n    let index = this.todos.indexOf(todo);\n    if(index !== -1)\n    {\n      this.todos.splice(index,1);\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    //.standardConfiguration()\n    .defaultBindingLanguage()\n    .defaultResources()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot('app', document.body));\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"..\\src"}